name: Sonar-Service   

networks:
  local-network:
    external: true

volumes:
  sonarqube_conf:
    name: sonarqube_conf-data
  sonarqube_data:
    name: sonarqube_data-data
  sonarqube_extensions:
    name: sonarqube_extensions-data
  sonarqube_bundled-plugins:
    name: sonarqube_bundled-plugins-data
  sonarqube_logs:
    name: sonarqube_logs-data
  sonarqube_temp:
    name: sonarqube_temp-data
  postgresql:
    name: postgresql-data
  postgresql_data:
    name: postgresql_data-data

services:
  sonarqube-Service:
    image: sonarqube:latest
    networks:
      - local-network
    hostname: sonarqube
    container_name: sonarqube-container
    environment:
      - SONARQUBE_JDBC_URL=${SONARQUBE_JDBC_URL}
      - SONARQUBE_JDBC_USERNAME=${SONARQUBE_JDBC_USERNAME}
      - SONARQUBE_JDBC_PASSWORD=${SONARQUBE_JDBC_PASSWORD}
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    ports:
      - 9000:9000
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 1m
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    cpuset: '1'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    init: true     
    depends_on: 
      db-service:
        condition: service_healthy

  db-service:
    image: postgres:17.2
    restart: always
    container_name: postgres-container    
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_LOG_LEVEL: ${POSTGRES_LOG_LEVEL}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 50s
      timeout: 5s
      retries: 15
      start_period: 2m
    ports:
        - 5432:5432
    networks:
      - local-network 
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    cpuset: '1'