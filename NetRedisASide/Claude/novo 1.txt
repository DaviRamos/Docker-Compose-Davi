Crie um aplicativo de nome NetRedisASide2:
1 Que Utilize os seguintes classes de modelo 
1.1 
public class Assunto
{
    public int Id { get; set; }
    public string Nome { get; set; } = String.Empty;
    public string Descricao { get; set; } = String.Empty;
    public DateTime DataCriacao { get; set; }
    public DateTime DataAtualizacao { get; set; }
}
1.2public class Movimentacao
{
    public int Id { get; set; }
    public string Nome { get; set; } = String.Empty;
    public string Descricao { get; set; } = String.Empty;
    public DateTime DataCriacao { get; set; }
    public DateTime DataAtualizacao { get; set; }
}
1.3 public class TipoDocumento
{
    public int Id { get; set; }
    public string Nome { get; set; } = String.Empty;
    public string Descricao { get; set; } = String.Empty;
    public DateTime DataCriacao { get; set; }
    public DateTime DataAtualizacao { get; set; }
}
2 Com entity framework para o postgres com pgvector
3 Crie a classe  AppDbContext para os Dbset
4 do tipo Minimal API com IDistributedCache, Repository e Service
5 faça o mapeamento dos Endpoints para classes individuais fora do program.cs
6 Inclua autenticação e autorização via keycloak protegendo as APis dos modelos
7 Coloque cada classe em arquivo separado.
8- Crie os serviços
8.1 ollama com suporte a gpu nvidia
8.1.1  É necessário baixar estes modelos no container do ollama
8.1.1.1 ollama pull llama2
8.1.1.2 ollama pull all-minilm
8.1.1.3 ollama pull mxbai-embed-large
8.2 Weaviate com ENABLE_MODULES: 'text2vec-ollama,generative-ollama' e  DEFAULT_VECTORIZER_MODULE: 'text2vec-ollama'
9 Crie o realm do NetRedisASide2 para o keycloak
9 Crie o docker-Compose do serviços e no serviço do keycloak
9.1 Inclua no compose a importacao do realm criado
9.2 separe as credencais dos serviços no arquivo .env
