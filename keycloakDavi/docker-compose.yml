name: keycloakDavi
    
networks:
  local-network:
        external: true

volumes:
  postgres-data:
    name: postgres-service_data

services:
  postgres-service: # Example. Remove before using.
    image: postgres:latest
    restart: always
    container_name: PostgresKC-container
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT} 
      POSTGRES_LOG_LEVEL: ${POSTGRES_LOG_LEVEL}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 50s
      timeout: 5s
      retries: 15
      start_period: 2m
    ports:
        - 5432:5432
    networks:
      - local-network 
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    cpuset: '1'

  keycloak-service:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak-container
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-service:5432/keycloakdb
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME: keycloak-service
      KC_HOSTNAME_STRICT: false
      KC_HTTP_PORT: 8080
      KC_HTTPS_PORT: 7443
    volumes:
      - ./keycloak_data:/opt/keycloak/data
    init: true
    command: ['start-dev', '--http-port', '8080', '--https-port', '7443', '--hostname', 'keycloak-service']
    ports:
      - 8080:8080
      - 7443:7443
      - 9000:9000
    networks:
      - local-network
    depends_on:
      postgres-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
      start_period: 2m
    deploy:
      resources:
        limits:
          cpus: '0.80'
          memory: 512M
        reservations:
          cpus: '0.30'
          memory: 128M
    cpuset: '1'