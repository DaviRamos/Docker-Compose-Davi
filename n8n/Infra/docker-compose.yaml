name: N8N-Service   

networks:
  n8n-network:
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data 
  n8n_data:
    name: n8n_data

services:
  postgres-service:
    image: postgres:16-alpine
    container_name: postgres-n8n-container
    hostname: postgres    
    restart: unless-stopped
    command: postgres -c shared_buffers=256MB -c work_mem=16MB -c maintenance_work_mem=128MB -c effective_cache_size=512MB -c max_connections=100
    environment:
       POSTGRES_USER: ${POSTGRES_USER}
       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
       POSTGRES_DB: ${POSTGRES_DB}
       POSTGRES_MULTIPLE_DATABASES: n8n
       POSTGRES_PORT: ${POSTGRES_PORT}
       POSTGRES_LOG_LEVEL: ${POSTGRES_LOG_LEVEL}
       PGDATA: /var/lib/postgresql/data/pgdata      
    volumes:
      - postgres_data:/var/lib/postgresql/data      
      - ./scripts/create-multiple-databases.sh:/docker-entrypoint-initdb.d/create-multiple-databases.sh
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 50s
      timeout: 5s
      retries: 15
      start_period: 2m
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    networks:
      - n8n-network

  n8n-service:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: n8n-container
    restart: always 
    ports:
      - "5678:5678"
    environment:
      N8N_HOST: ${N8N_PROTOCOL}
      N8N_PORT: ${N8N_PORT}
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      NODE_ENV: ${NODE_ENV}
      WEBHOOK_URL: http://localhost:5678/
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}
      TZ: ${TZ}
      DB_TYPE: ${DB_TYPE}
      DB_POSTGRESDB_DATABASE: ${DB_POSTGRESDB_DATABASE}
      DB_POSTGRESDB_HOST: postgres-service
      DB_POSTGRESDB_PORT: ${DB_POSTGRESDB_PORT}
      DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER}
      DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
    volumes:      
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres-service
    networks:
      - n8n-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M    
     